문제 회고를 위해 알고리즘 풀이 기록을 남깁니다.

# 백준 1158 요세푸스 문제


### 문제 이해하기
1. n과 k가 주어진다.
2. 원형으로 n명의 사람들이 앉아있고, 각 라운드에는 k번째 사람이 제거된다.
3. 다음 시작 라운드는 이전의 제거된 다음 사람부터 시작된다.


### 문제 접근 방법
1. 원형으로 앉아 있기 때문에 Queue로 구현가능하다.
2. 1~k-1번째 까지 poll해주면서 add해준다.
3. k번째의 경우 poll해주어 정답 순서에 넣어준다.
4. 이를 n번 시행하면 답을 구할 수있다.

### 구현 배경 지식
1. Queue

### 접근 방법을 적용한 코드
```java
public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        StringBuilder sb = new StringBuilder();
        Queue<Integer> q = new LinkedList<>();
        int n = sc.nextInt();
        int k = sc.nextInt();

        for (int i = 1; i <= n; i++) q.offer(i);
        sb.append("<");

        while(true){
            for(int i =1; i<k;i++)
                q.offer(q.poll());
            sb.append(q.poll());
            if(q.isEmpty()) {
                sb.append(">");
                break;
            }
            sb.append(", ");
        }
        System.out.println(sb);
    }
}
```

